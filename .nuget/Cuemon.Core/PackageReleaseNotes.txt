Version: 8.0.0
Availability: .NET 8, .NET 7, .NET 6 and .NET Standard 2.0
 
# ALM
- ADDED TFM for net8.0
- CHANGED Dependencies to latest and greatest with respect to TFMs
 
# Breaking Changes
- REMOVED SerializableAttribute and ISerializable implementations due to Microsoft decision on deprecating most of the legacy serialization infrastructure https://github.com/dotnet/docs/issues/34893
- REMOVED HasParameters property from MemberReflection class in the Cuemon.Reflection namespace
- CHANGED IsProperty property visibility from public to private in the MemberReflection class in the Cuemon.Reflection namespace
- CHANGED FormattingOptions class in the Cuemon namespace to not have generic parameter T (of IFormatProvider) and implement IValidatableParameterObject
- RENAMED ThrowIfObjectInDistress method on the Validator class in the Cuemon namespace to ThrowIfInvalidState
- RENAMED ICorrelation interface in the Cuemon.Messaging namespace to ICorrelationToken
- RENAMED IRequest interface in the Cuemon.Messaging namespace to IRequestToken
- REMOVED DynamicCorrelation class from the Cuemon.Messaging namespace
- REMOVED DynamicRequest class from the Cuemon.Messaging namespace
 
# Bug Fixes
- FIXED World class in the Cuemon.Globalization namespace so that it no longer throws an ArgumentException when adding a duplicate culture (on Linux)
- FIXED YamlTextWriter class in the Cuemon.Runtime.Serialization namespace so that it skip serializing the object when WriteObject is called with a null value
 
# Improvements
- EXTENDED MemberReflection class in the Cuemon.Reflection namespace with an additional new static member: CreateFlags
- CHANGED Validator class in the Cuemon namespace was modernized and greatly improved for both consistency and changes introduced by Microsoft for both C# 10 and recent .NET versions
- ADDED Static method EncloseToExpose together with a new property, ArgumentName, to the Decorator class in the Cuemon namespace that can be used to re-use non-common extension methods from native extension methods without double-validating arguments
- ADDED An overload of CheckParameter to the Validator class in the Cuemon namespace that satisfies validating when doing constructor nesting
- DelimitedStringOptions class in the Cuemon namespace inherits from FormattingOptions
- ObjectFormattingOptions class in the Cuemon namespace inherits from FormattingOptions
- ObjectPortrayalOptions class in the Cuemon namespace inherits from FormattingOptions
- ActivatorOptions class in the Cuemon.Reflection namespace inherits from FormattingOptions
- TypeNameOptions class in the Cuemon.Reflection namespace inherits from FormattingOptions
- StorageCapacityOptions class in the Cuemon namespace inherits from FormattingOptions
- UnitFormatOptions class in the Cuemon namespace inherits from FormattingOptions
- EXTENDED Validator class in the Cuemon namespace to have new static methods: ThrowIfDisposed
 
# New Features
- ADDED MethodSignature class in the Cuemon.Reflection namespace to represent a lightweight signature of a method when serializing and deserializing
- ADDED TransientFaultEvidence class in the Cuemon.Resilience namespace that provides evidence about a faulted TransientOperation
- ADDED TransientFaultException class in the Cuemon.Resilience namespace that represents the exception that is thrown when a transient fault handling was unsuccessful
- ADDED Formatter class in the Cuemon.Runtime.Serialization.Formatters namespace that complements serialization and deserialization of an object
- ADDED MemberArgument class in the Cuemon.Reflection namespace to represent an argument given to a member in the context of reflection
- ADDED MemberParser class in the Cuemon.Reflection namespace to provide a generic way to rehydrate serialized objects
- ADDED MemberArgumentDecoratorExtensions class in the Cuemon.Reflection namespace that provides (hidden) extensions to the MemberArgument class
- ADDED CorrelationToken class in the Cuemon.Messaging namespace that represents a default implementation of the ICorrelationToken interface
- ADDED RequestToken class in the Cuemon.Messaging namespace that represents a default implementation of the IRequestToken interface
 
# Quality Analysis Actions
- CHANGED HierarchySerializer class in the Cuemon.Runtime.Serialization namespace to be compliant with https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1822
 
Version: 7.1.0
Availability: .NET Standard 2.0, .NET 6.0, .NET 7.0
 
# ALM
- CHANGED Dependencies to latest and greatest with respect to TFM
 
# Bug Fixes
- FIXED ReservedKeywordException class in the Cuemon namespace so the default message is used in case of null value
 
# New Features
- EXTENDED Tweaker class in the Cuemon namespace with one  new static members: Alter{T}
 
Version: 7.0.0
Availability: .NET Standard 2.0, .NET 6.0, .NET 7.0
 
# ALM
- ADDED TFM for .NET 7
- REMOVED TFM for .NET 5
- CHANGED Dependencies to latest and greatest with respect to TFM
 
# Breaking Changes
- REMOVED CheckParameter overloads from the Validator class in the Cuemon namespace
- CHANGED ThrowIfNull{T} --> ThrowIfNull on the Validator class in the Cuemon namespace
- CHANGED Configure{T}, ConfigureExchange{T} and ConfigureRevertExchange{T} on the Patterns class in the Cuemon namespace to have type conditions include IParameterObject
 
# New Features
- ADDED HttpAuthenticationSchemes class in the Cuemon.Net.Http namespace that specifies options that defines constants for well-known HTTP authentication schemes
- ADDED HttpHeaderNames class in the Cuemon.Net.Http namespace that defines constants for well-known HTTP headers
- ADDED YamlSerializer class in the Cuemon.Runtime.Serialization namespace that provides functionality to serialize objects to YAML and to deserialize YAML into objects
- ADDED YamlSerializerOptions class in the Cuemon.Runtime.Serialization namespace that specifies options related to YamlSerializer
- ADDED YamlTextReader class in the Cuemon.Runtime.Serialization namespace that represents a reader that provides fast, non-cached, forward-only access to YAML data
- ADDED YamlTextWriter class in the Cuemon.Runtime.Serialization namespace that represents a writer that provides a fast, non-cached, forward-only way to generate streams or files that contain YAML data
- ADDED ExceptionConverter class in the Cuemon.Text.Yaml.Converters namespace that converts an Exception to or from YAML
- ADDED YamlConverter class in the Cuemon.Text.Yaml.Converters namespace that converts an object to or from YAML (YAML ain't markup language)
- ADDED YamlFormatter class in the Cuemon.Text.Yaml.Formatters namespace that serializes and deserializes an object, in YAML format
- ADDED YamlFormatterOptions class in the Cuemon.Text.Yaml.Formatters namespace that specifies options related to YamlFormatter
- ADDED YamlConverterFactory class in the Cuemon.Text.Yaml namespace that provides a factory based way to create and wrap an YamlConverter implementation
- ADDED YamlNamingPolicy class in the Cuemon.Text.Yaml namespace that determines the naming policy used to convert a string-based name to another format
- EXTENDED Patterns class in the Cuemon namespace with two new static members: ConfigureRevertExchange, CreateInstance{T}
- ADDED IParameterObject interface in the Cuemon.Configuration namespace that serves as a marker interface denoting a Parameter Object
- ADDED IValidatableParameterObject interface in the Cuemon.Configuration namespace that denotes a Parameter Object where one or more conditions can be verified that they are in a valid state
- ADDED CallerArgumentExpressionAttribute class in the System.Runtime.CompilerServices namespace that indicates that a parameter captures the expression passed for another parameter as a string (for .NET versions <= .NET Core 3.0)
- EXTENDED Eradicate class in the Cuemon namespace with one new static member: TrailingBytes
 
# Improvements
- EXTENDED Validator class in the Cuemon namespace with several new static members: ThrowIfInvalidConfigurator, ThrowIfInvalidOptions, ThrowIfObjectInDistress
- CHANGED ActivatorOptions class in the Cuemon.Reflection namespace to match Activator BindingFlags defaults from Microsoft
- CHANGED ThrowIfNull, ThrowIfNullOrEmpty and ThrowIfNullOrWhitespace on the Validator class in the Cuemon namespace to embrace the new CallerArgumentExpression attribute
 
# Bug Fixes
- FIXED TypeNameOptions class in the Cuemon.Reflection namespace that could throw a NullReferenceException when FullName is null; fallback to Name
- FIXED World class in the Cuemon.Globalization namespace to exclude CultureInfo with LCID value of 127 (triggered exception on Alpine OS)
 