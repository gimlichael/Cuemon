jobs:
  - job: BuildDotNet7_0
    displayName: 'PR (net7, build)'
    timeoutInMinutes: 60
    strategy:
      matrix:
        Linux_Build:
          imageName: ${{ parameters.linuxVmImage }}
        Windows_Build:
          imageName: ${{ parameters.windowsVmImage }}
    pool:
      ${{ if eq(parameters.selfHosted, 'true') }}:
        name: $(imageName)
      ${{ if eq(parameters.selfHosted, 'false') }}:
        vmImage: $(imageName)
    variables:
      - name: DotnetBuildName
        value: 'net7.0'
    steps:
    - template: ../steps/dotnet.yml
    - template: ../steps/install-minvertool.yml
    - template: ../steps/download-snk.yml
    - template: ../steps/minverversion-override.yml
    - template: ../steps/restore.yml
    - template: ../steps/build-net7_0.yml

  - job: BuildDotNet6_0
    displayName: 'PR (net6, build, test)'
    timeoutInMinutes: 90
    strategy:
      matrix:
        Linux_Build_and_Test:
          imageName: ${{ parameters.linuxVmImage }}
        Windows_Build_Test_and_Package:
          imageName: ${{ parameters.windowsVmImage }}
    pool:
      ${{ if eq(parameters.selfHosted, 'true') }}:
        name: $(imageName)
      ${{ if eq(parameters.selfHosted, 'false') }}:
        vmImage: $(imageName)
    variables:
      - name: DotnetBuildName
        value: 'net6.0'
    steps:
    - template: ../steps/dotnet.yml
    - template: ../steps/install-minvertool.yml
    - template: ../steps/download-snk.yml
    - template: ../steps/minverversion-override.yml
    - template: ../steps/restore.yml
    - template: ../steps/build-net6_0.yml

  - job: BuildDotNet3_1
    displayName: 'PR (netcoreapp3.1, build)'
    timeoutInMinutes: 30
    strategy:
      matrix:
        Linux_Build:
          imageName: ${{ parameters.linuxVmImage }}
        Windows_Build:
          imageName: ${{ parameters.windowsVmImage }}
    pool:
      ${{ if eq(parameters.selfHosted, 'true') }}:
        name: $(imageName)
      ${{ if eq(parameters.selfHosted, 'false') }}:
        vmImage: $(imageName)
    variables:
      - name: DotnetBuildName
        value: 'netcoreapp3.1'
    steps:
    - template: ../steps/dotnet.yml
    - template: ../steps/install-minvertool.yml
    - template: ../steps/download-snk.yml
    - template: ../steps/minverversion-override.yml
    - template: ../steps/restore.yml
    - template: ../steps/build-netcoreapp3_1.yml

  - job: BuildDotNet2_1
    displayName: 'PR (netstandard2.1, build)'
    timeoutInMinutes: 30
    strategy:
      matrix:
        Linux_Build:
          imageName: ${{ parameters.linuxVmImage }}
        Windows_Build:
          imageName: ${{ parameters.windowsVmImage }}
    pool:
      ${{ if eq(parameters.selfHosted, 'true') }}:
        name: $(imageName)
      ${{ if eq(parameters.selfHosted, 'false') }}:
        vmImage: $(imageName)
    variables:
      - name: DotnetBuildName
        value: 'netstandard2.1'
    steps:
    - template: ../steps/dotnet.yml
    - template: ../steps/install-minvertool.yml
    - template: ../steps/download-snk.yml
    - template: ../steps/minverversion-override.yml
    - template: ../steps/restore.yml
    - template: ../steps/build-netstandard2_1.yml

  - job: BuildDotNet2_0
    displayName: 'PR (netstandard2.0, build)'
    timeoutInMinutes: 30
    strategy:
      matrix:
        Linux_Build:
          imageName: ${{ parameters.linuxVmImage }}
        Windows_Build:
          imageName: ${{ parameters.windowsVmImage }}
    pool:
      ${{ if eq(parameters.selfHosted, 'true') }}:
        name: $(imageName)
      ${{ if eq(parameters.selfHosted, 'false') }}:
        vmImage: $(imageName)
    variables:
      - name: DotnetBuildName
        value: 'netstandard2.0'
    steps:
    - template: ../steps/dotnet.yml
    - template: ../steps/install-minvertool.yml
    - template: ../steps/download-snk.yml
    - template: ../steps/minverversion-override.yml
    - template: ../steps/restore.yml
    - template: ../steps/build-netstandard2_0.yml