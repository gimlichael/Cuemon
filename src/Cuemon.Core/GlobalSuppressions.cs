// This file is used by Code Analysis to maintain SuppressMessage 
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given 
// a specific target and scoped to a namespace, type, member, etc.

using System.Diagnostics.CodeAnalysis;
[assembly: SuppressMessage("Major Code Smell", "S3881:\"IDisposable\" should be implemented correctly", Justification = "This is a base class implementation of the IDisposable interface tailored to avoid wrong implementations.", Scope = "type", Target = "~T:Cuemon.Disposable")]
[assembly: SuppressMessage("Minor Code Smell", "S1128:Unused \"using\" should be removed", Justification = "It is actually used when resolving extension method from System.Collections.Generic; SC just can't figure this out.")]
[assembly: SuppressMessage("Critical Code Smell", "S3776:Cognitive Complexity of methods should not be too high", Justification = "By design.", Scope = "member", Target = "~F:Cuemon.Convertible.EndianSensitiveByteArrayConverters")]
[assembly: SuppressMessage("Major Code Smell", "S107:Methods should not have too many parameters", Justification = "A Func designed for the Tester pattern. Microsoft allows 17 arguments in there Func impl; so do i here.", Scope = "type", Target = "~T:Cuemon.TesterFunc`10")]
[assembly: SuppressMessage("Major Code Smell", "S107:Methods should not have too many parameters", Justification = "A Func designed for the Tester pattern. Microsoft allows 17 arguments in there Func impl; so do i here.", Scope = "type", Target = "~T:Cuemon.TesterFunc`11")]
[assembly: SuppressMessage("Major Code Smell", "S107:Methods should not have too many parameters", Justification = "A Func designed for the Tester pattern. Microsoft allows 17 arguments in there Func impl; so do i here.", Scope = "type", Target = "~T:Cuemon.TesterFunc`12")]
[assembly: SuppressMessage("Major Code Smell", "S107:Methods should not have too many parameters", Justification = "A Func designed for the Tester pattern. Microsoft allows 17 arguments in there Func impl; so do i here.", Scope = "type", Target = "~T:Cuemon.TesterFunc`13")]
[assembly: SuppressMessage("Major Code Smell", "S107:Methods should not have too many parameters", Justification = "A Func designed for the Tester pattern. Microsoft allows 17 arguments in there Func impl; so do i here.", Scope = "type", Target = "~T:Cuemon.TesterFunc`14")]
[assembly: SuppressMessage("Major Code Smell", "S107:Methods should not have too many parameters", Justification = "A Func designed for the Tester pattern. Microsoft allows 17 arguments in there Func impl; so do i here.", Scope = "type", Target = "~T:Cuemon.TesterFunc`15")]
[assembly: SuppressMessage("Major Code Smell", "S107:Methods should not have too many parameters", Justification = "A Func designed for the Tester pattern. Microsoft allows 17 arguments in there Func impl; so do i here.", Scope = "type", Target = "~T:Cuemon.TesterFunc`16")]
[assembly: SuppressMessage("Major Code Smell", "S107:Methods should not have too many parameters", Justification = "A Func designed for the Tester pattern. Microsoft allows 17 arguments in there Func impl; so do i here.", Scope = "type", Target = "~T:Cuemon.TesterFunc`17")]
[assembly: SuppressMessage("Major Code Smell", "S107:Methods should not have too many parameters", Justification = "A Func designed for the Tester pattern. Microsoft allows 17 arguments in there Func impl; so do i here.", Scope = "type", Target = "~T:Cuemon.TesterFunc`18")]
[assembly: SuppressMessage("Major Code Smell", "S107:Methods should not have too many parameters", Justification = "A Func designed for the Tester pattern. Microsoft allows 17 arguments in there Func impl; so do i here.", Scope = "type", Target = "~T:Cuemon.TesterFunc`9")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; think about it as a Tuple/Variadic - but for TesterFunc delegates.", Scope = "type", Target = "~T:Cuemon.TesterFuncFactory`3")]
[assembly: SuppressMessage("Major Code Smell", "S107:Methods should not have too many parameters", Justification = "By design; allow up till 5 arguments (more under certain conditions)..", Scope = "member", Target = "~M:Cuemon.Patterns.SafeInvoke``6(System.Func{``5},System.Func{``5,``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Action{System.Exception,``0,``1,``2,``3,``4})~``5")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow up till 5 arguments (more under certain conditions)..", Scope = "member", Target = "~M:Cuemon.Patterns.SafeInvoke``4(System.Func{``3},System.Func{``3,``0,``1,``2,``3},``0,``1,``2,System.Action{System.Exception,``0,``1,``2})~``3")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow up till 5 arguments (more under certain conditions)..", Scope = "member", Target = "~M:Cuemon.Patterns.SafeInvoke``5(System.Func{``4},System.Func{``4,``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Action{System.Exception,``0,``1,``2,``3})~``4")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow up till 5 arguments (more under certain conditions)..", Scope = "member", Target = "~M:Cuemon.Patterns.SafeInvoke``6(System.Func{``5},System.Func{``5,``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Action{System.Exception,``0,``1,``2,``3,``4})~``5")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow up till 5 arguments (more under certain conditions).", Scope = "member", Target = "~M:Cuemon.Condition.FlipFlop``4(System.Boolean,System.Action{``0,``1,``2,``3},System.Action{``0,``1,``2,``3},``0,``1,``2,``3)")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow up till 5 arguments (more under certain conditions).", Scope = "member", Target = "~M:Cuemon.Condition.FlipFlop``5(System.Boolean,System.Action{``0,``1,``2,``3,``4},System.Action{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4)")]
[assembly: SuppressMessage("Major Code Smell", "S107:Methods should not have too many parameters", Justification = "By design; allow up till 5 arguments (more under certain conditions).", Scope = "member", Target = "~M:Cuemon.Condition.FlipFlop``5(System.Boolean,System.Action{``0,``1,``2,``3,``4},System.Action{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4)")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow up till 5 arguments (more under certain conditions).", Scope = "member", Target = "~M:Cuemon.Condition.TernaryIf``4(System.Boolean,System.Func{``0,``1,``2,``3},System.Func{``0,``1,``2,``3},``0,``1,``2)~``3")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow up till 5 arguments (more under certain conditions).", Scope = "member", Target = "~M:Cuemon.Condition.TernaryIf``5(System.Boolean,System.Func{``0,``1,``2,``3,``4},System.Func{``0,``1,``2,``3,``4},``0,``1,``2,``3)~``4")]
[assembly: SuppressMessage("Major Code Smell", "S107:Methods should not have too many parameters", Justification = "By design; allow up till 5 arguments (more under certain conditions).", Scope = "member", Target = "~M:Cuemon.Condition.TernaryIf``6(System.Boolean,System.Func{``0,``1,``2,``3,``4,``5},System.Func{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4)~``5")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow up till 5 arguments (more under certain conditions).", Scope = "member", Target = "~M:Cuemon.Condition.TernaryIf``6(System.Boolean,System.Func{``0,``1,``2,``3,``4,``5},System.Func{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4)~``5")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow up till 5 arguments (more under certain conditions).", Scope = "member", Target = "~M:Cuemon.Reflection.ActivatorFactory.CreateInstance``4(``0,``1,``2,System.Action{Cuemon.Reflection.ActivatorOptions})~``3")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow up till 5 arguments (more under certain conditions).", Scope = "member", Target = "~M:Cuemon.Reflection.ActivatorFactory.CreateInstance``5(``0,``1,``2,``3,System.Action{Cuemon.Reflection.ActivatorOptions})~``4")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow up till 5 arguments (more under certain conditions).", Scope = "member", Target = "~M:Cuemon.Reflection.ActivatorFactory.CreateInstance``6(``0,``1,``2,``3,``4,System.Action{Cuemon.Reflection.ActivatorOptions})~``5")]
[assembly: SuppressMessage("Critical Code Smell", "S3776:Cognitive Complexity of methods should not be too high", Justification = "By design; although a good rule, this is the exception to the rule.", Scope = "member", Target = "~M:Cuemon.Calculator.CalculateCore``1(``0,``0,Cuemon.AssignmentOperator)~``0")]
[assembly: SuppressMessage("Major Code Smell", "S3011:Reflection should not be used to increase accessibility of classes, methods, or fields", Justification = "By design.", Scope = "member", Target = "~F:Cuemon.Reflection.MemberReflection.Everything")]
[assembly: SuppressMessage("Major Code Smell", "S3011:Reflection should not be used to increase accessibility of classes, methods, or fields", Justification = "By design.", Scope = "member", Target = "~M:Cuemon.Reflection.MemberReflection.#ctor(System.Action{Cuemon.Reflection.MemberReflectionOptions})")]
[assembly: SuppressMessage("Major Code Smell", "S3011:Reflection should not be used to increase accessibility of classes, methods, or fields", Justification = "By design.", Scope = "member", Target = "~M:Cuemon.Globalization.ResourceAttribute.GetString(System.String)~System.String")]
[assembly: SuppressMessage("Major Code Smell", "S1854:Unused assignments should be removed", Justification = "False Positive", Scope = "member", Target = "~M:Cuemon.DateSpan.#ctor(System.DateTime,System.DateTime,System.Globalization.Calendar)")]
[assembly: SuppressMessage("Style", "IDE0220:Add explicit cast", Justification = "False-Positive", Scope = "member", Target = "~M:Cuemon.StringReplaceEngine.RenderReplacement~System.String")]
[assembly: SuppressMessage("Critical Code Smell", "S3776:Cognitive Complexity of methods should not be too high", Justification = "Prioritize functionality and correctness over complexity metrics.", Scope = "member", Target = "~M:Cuemon.DateSpan.#ctor(System.DateTime,System.DateTime,System.Globalization.Calendar)")]
[assembly: SuppressMessage("Major Code Smell", "S2589:Boolean expressions should not be gratuitous", Justification = "False Positive", Scope = "member", Target = "~M:Cuemon.Security.CyclicRedundancyCheck.PolynomialTableInitializerCore(System.UInt64)~System.Collections.Generic.List{System.UInt64}")]
[assembly: SuppressMessage("Minor Code Smell", "S3236:Caller information arguments should not be provided explicitly", Justification = "By design - and unit tested to that no information is lost.", Scope = "member", Target = "~M:Cuemon.Decorator`1.#ctor(`0,System.Boolean,System.String)")]
[assembly: SuppressMessage("Critical Code Smell", "S3776:Cognitive Complexity of methods should not be too high", Justification = "Acceptable.", Scope = "member", Target = "~M:Cuemon.Text.ParserFactory.FromValueType~Cuemon.Text.IConfigurableParser{System.Object,Cuemon.FormattingOptions}")]
[assembly: SuppressMessage("Critical Code Smell", "S3776:Cognitive Complexity of methods should not be too high", Justification = "Acceptable.", Scope = "member", Target = "~M:Cuemon.Reflection.MemberArgumentDecoratorExtensions.CreateException(Cuemon.IDecorator{System.Collections.Generic.Stack{System.Collections.Generic.IList{Cuemon.Reflection.MemberArgument}}},System.Boolean)~System.Exception")]
[assembly: SuppressMessage("Minor Code Smell", "S3236:Caller information arguments should not be provided explicitly", Justification = "False positive; IDecorator support overriding argument name used together with Decorator.EncloseToExpose.", Scope = "member", Target = "~M:Cuemon.Validator.ThrowIfNull``1(Cuemon.IDecorator{``0},``0@,System.String,System.String)")]
[assembly: SuppressMessage("Style", "IDE0130:Namespace does not match folder structure", Justification = "Intentional as these embark on IDecorator.", Scope = "namespace", Target = "~N:Cuemon")]
[assembly: SuppressMessage("Style", "IDE0130:Namespace does not match folder structure", Justification = "Intentional as these embark on IDecorator.", Scope = "namespace", Target = "~N:Cuemon.Collections.Generic")]
[assembly: SuppressMessage("Style", "IDE0130:Namespace does not match folder structure", Justification = "Intentional as these embark on IDecorator.", Scope = "namespace", Target = "~N:Cuemon.Collections.Specialized")]
[assembly: SuppressMessage("Style", "IDE0130:Namespace does not match folder structure", Justification = "Intentional as these embark on IDecorator.", Scope = "namespace", Target = "~N:Cuemon.IO")]
[assembly: SuppressMessage("Style", "IDE0130:Namespace does not match folder structure", Justification = "Intentional as these embark on IDecorator.", Scope = "namespace", Target = "~N:Cuemon.Reflection")]
[assembly: SuppressMessage("Style", "IDE0130:Namespace does not match folder structure", Justification = "By design. To support pre-net9.0.", Scope = "namespace", Target = "~N:System.Threading")]
[assembly: SuppressMessage("Style", "IDE0130:Namespace does not match folder structure", Justification = "By design. To support pre-netcoreapp3.0.", Scope = "namespace", Target = "~N:System.Runtime.CompilerServices")]
[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "Consistent with Comparer<T>.Default implementation.", Scope = "member", Target = "~P:Cuemon.Collections.Generic.EnumerableSizeComparer`1.Default")]
[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "Consistent with Comparer<T>.Default implementation.", Scope = "member", Target = "~P:Cuemon.Collections.Generic.ReferenceComparer`1.Default")]
[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "By design; supports consistent developer experience for all formatters, e.g., SerializeObject/DeserializeObject.", Scope = "member", Target = "~M:Cuemon.Runtime.Serialization.Formatters.StreamFormatter`1.DeserializeObject(System.IO.Stream,System.Type)~System.Object")]
[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "By design; supports consistent developer experience for all formatters, e.g., SerializeObject/DeserializeObject.", Scope = "member", Target = "~M:Cuemon.Runtime.Serialization.Formatters.StreamFormatter`1.DeserializeObject(System.IO.Stream,System.Type,`0)~System.Object")]
[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "By design; supports consistent developer experience for all formatters, e.g., SerializeObject/DeserializeObject.", Scope = "member", Target = "~M:Cuemon.Runtime.Serialization.Formatters.StreamFormatter`1.DeserializeObject(System.IO.Stream,System.Type,System.Action{`0})~System.Object")]
[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "By design; supports consistent developer experience for all formatters, e.g., SerializeObject/DeserializeObject.", Scope = "member", Target = "~M:Cuemon.Runtime.Serialization.Formatters.StreamFormatter`1.DeserializeObject``1(System.IO.Stream)~``0")]
[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "By design; supports consistent developer experience for all formatters, e.g., SerializeObject/DeserializeObject.", Scope = "member", Target = "~M:Cuemon.Runtime.Serialization.Formatters.StreamFormatter`1.DeserializeObject``1(System.IO.Stream,`0)~``0")]
[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "By design; supports consistent developer experience for all formatters, e.g., SerializeObject/DeserializeObject.", Scope = "member", Target = "~M:Cuemon.Runtime.Serialization.Formatters.StreamFormatter`1.DeserializeObject``1(System.IO.Stream,System.Action{`0})~``0")]
[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "By design; supports consistent developer experience for all formatters, e.g., SerializeObject/DeserializeObject.", Scope = "member", Target = "~M:Cuemon.Runtime.Serialization.Formatters.StreamFormatter`1.SerializeObject(System.Object)~System.IO.Stream")]
[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "By design; supports consistent developer experience for all formatters, e.g., SerializeObject/DeserializeObject.", Scope = "member", Target = "~M:Cuemon.Runtime.Serialization.Formatters.StreamFormatter`1.SerializeObject(System.Object,`0)~System.IO.Stream")]
[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "By design; supports consistent developer experience for all formatters, e.g., SerializeObject/DeserializeObject.", Scope = "member", Target = "~M:Cuemon.Runtime.Serialization.Formatters.StreamFormatter`1.SerializeObject(System.Object,System.Action{`0})~System.IO.Stream")]
[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "By design; supports consistent developer experience for all formatters, e.g., SerializeObject/DeserializeObject.", Scope = "member", Target = "~M:Cuemon.Runtime.Serialization.Formatters.StreamFormatter`1.SerializeObject(System.Object,System.Type)~System.IO.Stream")]
[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "By design; supports consistent developer experience for all formatters, e.g., SerializeObject/DeserializeObject.", Scope = "member", Target = "~M:Cuemon.Runtime.Serialization.Formatters.StreamFormatter`1.SerializeObject(System.Object,System.Type,`0)~System.IO.Stream")]
[assembly: SuppressMessage("Design", "CA1000:Do not declare static members on generic types", Justification = "By design; supports consistent developer experience for all formatters, e.g., SerializeObject/DeserializeObject.", Scope = "member", Target = "~M:Cuemon.Runtime.Serialization.Formatters.StreamFormatter`1.SerializeObject(System.Object,System.Type,System.Action{`0})~System.IO.Stream")]
[assembly: SuppressMessage("Globalization", "CA1304:Specify CultureInfo", Justification = "False-Positive. Overload exists.", Scope = "member", Target = "~M:Cuemon.DateSpan.Parse(System.String)~Cuemon.DateSpan")]
[assembly: SuppressMessage("Globalization", "CA1304:Specify CultureInfo", Justification = "Intentionally written for only en-US support.", Scope = "member", Target = "~M:Cuemon.Reflection.MemberArgumentDecoratorExtensions.CreateException(Cuemon.IDecorator{System.Collections.Generic.Stack{System.Collections.Generic.IList{Cuemon.Reflection.MemberArgument}}},System.Boolean)~System.Exception")]
[assembly: SuppressMessage("Naming", "CA1710:Identifiers should have correct suffix", Justification = "Explicit implementation.", Scope = "type", Target = "~T:Cuemon.Diagnostics.Failure")]
[assembly: SuppressMessage("Reliability", "CA2022:Avoid inexact read with 'Stream.Read'", Justification = "Byteordermark - best effort.", Scope = "member", Target = "~M:Cuemon.Text.ByteOrderMark.TryDetectEncoding(System.IO.Stream,System.Text.Encoding@)~System.Boolean")]
[assembly: SuppressMessage("Style", "IDE0005:Using directive is unnecessary.", Justification = "False-positive; needed for TFM netstandard2.0.")]
[assembly: SuppressMessage("Major Code Smell", "S110:Inheritance tree of classes should not be too deep", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`10")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`10")]
[assembly: SuppressMessage("Major Code Smell", "S110:Inheritance tree of classes should not be too deep", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`11")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`11")]
[assembly: SuppressMessage("Major Code Smell", "S110:Inheritance tree of classes should not be too deep", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`12")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`12")]
[assembly: SuppressMessage("Major Code Smell", "S110:Inheritance tree of classes should not be too deep", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`13")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`13")]
[assembly: SuppressMessage("Major Code Smell", "S110:Inheritance tree of classes should not be too deep", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`14")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`14")]
[assembly: SuppressMessage("Major Code Smell", "S110:Inheritance tree of classes should not be too deep", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`15")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`15")]
[assembly: SuppressMessage("Major Code Smell", "S110:Inheritance tree of classes should not be too deep", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`16")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`16")]
[assembly: SuppressMessage("Major Code Smell", "S110:Inheritance tree of classes should not be too deep", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`17")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`17")]
[assembly: SuppressMessage("Major Code Smell", "S110:Inheritance tree of classes should not be too deep", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`18")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`18")]
[assembly: SuppressMessage("Major Code Smell", "S110:Inheritance tree of classes should not be too deep", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`19")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`19")]
[assembly: SuppressMessage("Major Code Smell", "S110:Inheritance tree of classes should not be too deep", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`20")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`20")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`3")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`4")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`5")]
[assembly: SuppressMessage("Major Code Smell", "S110:Inheritance tree of classes should not be too deep", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`6")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`6")]
[assembly: SuppressMessage("Major Code Smell", "S110:Inheritance tree of classes should not be too deep", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`7")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`7")]
[assembly: SuppressMessage("Major Code Smell", "S110:Inheritance tree of classes should not be too deep", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`8")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`8")]
[assembly: SuppressMessage("Major Code Smell", "S110:Inheritance tree of classes should not be too deep", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`9")]
[assembly: SuppressMessage("Major Code Smell", "S2436:Types and methods should not have too many generic parameters", Justification = "By design; allow to exceed generic arguments recommendation.", Scope = "type", Target = "~T:Cuemon.MutableTuple`9")]
